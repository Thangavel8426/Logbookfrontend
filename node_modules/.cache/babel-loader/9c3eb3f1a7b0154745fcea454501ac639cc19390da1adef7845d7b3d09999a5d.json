{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Validate token before sending request\n    try {\n      const jwtDecode = require('jwt-decode');\n      const decoded = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp && decoded.exp < currentTime) {\n        console.log('Token expired, removing from localStorage');\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        return Promise.reject('Token expired');\n      }\n      config.headers.Authorization = `Bearer ${token}`;\n    } catch (error) {\n      console.error('Token validation error:', error);\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n      return Promise.reject('Invalid token');\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    // Handle 401 Unauthorized errors\n    if (error.response.status === 401) {\n      console.log('Unauthorized access, logging out');\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n\n    // Handle 403 Forbidden errors\n    if (error.response.status === 403) {\n      console.log('Access forbidden');\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\nexport const experimentAPI = {\n  getAll: () => api.get('/experiments'),\n  getById: id => api.get(`/experiments/${id}`),\n  create: experimentData => api.post('/experiments', experimentData),\n  update: (id, experimentData) => api.put(`/experiments/${id}`, experimentData),\n  delete: id => api.delete(`/experiments/${id}`),\n  updateStatus: (id, status) => api.put(`/experiments/${id}/status`, null, {\n    params: {\n      status\n    }\n  }),\n  search: (keyword, page = 0, size = 10) => api.get('/experiments/search', {\n    params: {\n      keyword,\n      page,\n      size\n    }\n  }),\n  getByUser: userId => api.get(`/experiments/user/${userId}`),\n  getByStatus: status => api.get(`/experiments/status/${status}`)\n};\nexport const userAPI = {\n  getAll: () => api.get('/users'),\n  getById: id => api.get(`/users/${id}`),\n  create: userData => api.post('/users', userData),\n  update: (id, userData) => api.put(`/users/${id}`, userData),\n  delete: id => api.delete(`/users/${id}`),\n  checkUsername: username => api.get(`/users/check-username/${username}`),\n  checkEmail: email => api.get(`/users/check-email/${email}`),\n  uploadProfilePicture: (username, fileData) => api.post(`/profile-pictures/${username}`, fileData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","jwtDecode","require","decoded","currentTime","Date","now","exp","console","log","removeItem","window","location","href","Promise","reject","Authorization","error","response","status","authAPI","login","credentials","post","register","userData","experimentAPI","getAll","get","getById","id","experimentData","update","put","delete","updateStatus","params","search","keyword","page","size","getByUser","userId","getByStatus","userAPI","checkUsername","username","checkEmail","email","uploadProfilePicture","fileData"],"sources":["C:/Users/pthan/OneDrive/Desktop/SBproject/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    // Validate token before sending request\r\n    try {\r\n      const jwtDecode = require('jwt-decode');\r\n      const decoded = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      if (decoded.exp && decoded.exp < currentTime) {\r\n        console.log('Token expired, removing from localStorage');\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login';\r\n        return Promise.reject('Token expired');\r\n      }\r\n      \r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    } catch (error) {\r\n      console.error('Token validation error:', error);\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n      return Promise.reject('Invalid token');\r\n    }\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Handle response errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      // Handle 401 Unauthorized errors\r\n      if (error.response.status === 401) {\r\n        console.log('Unauthorized access, logging out');\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login';\r\n      }\r\n      \r\n      // Handle 403 Forbidden errors\r\n      if (error.response.status === 403) {\r\n        console.log('Access forbidden');\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n};\r\n\r\nexport const experimentAPI = {\r\n  getAll: () => api.get('/experiments'),\r\n  getById: (id) => api.get(`/experiments/${id}`),\r\n  create: (experimentData) => api.post('/experiments', experimentData),\r\n  update: (id, experimentData) => api.put(`/experiments/${id}`, experimentData),\r\n  delete: (id) => api.delete(`/experiments/${id}`),\r\n  updateStatus: (id, status) => api.put(`/experiments/${id}/status`, null, { params: { status } }),\r\n  search: (keyword, page = 0, size = 10) => api.get('/experiments/search', { params: { keyword, page, size } }),\r\n  getByUser: (userId) => api.get(`/experiments/user/${userId}`),\r\n  getByStatus: (status) => api.get(`/experiments/status/${status}`),\r\n};\r\n\r\nexport const userAPI = {\r\n  getAll: () => api.get('/users'),\r\n  getById: (id) => api.get(`/users/${id}`),\r\n  create: (userData) => api.post('/users', userData),\r\n  update: (id, userData) => api.put(`/users/${id}`, userData),\r\n  delete: (id) => api.delete(`/users/${id}`),\r\n  checkUsername: (username) => api.get(`/users/check-username/${username}`),\r\n  checkEmail: (email) => api.get(`/users/check-email/${email}`),\r\n  uploadProfilePicture: (username, fileData) => api.post(`/profile-pictures/${username}`, fileData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  }),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}