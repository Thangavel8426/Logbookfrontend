{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pthan\\\\OneDrive\\\\Desktop\\\\SBproject\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { experimentAPI } from '../services/api';\nimport { useSearch } from '../context/SearchContext';\nimport ExperimentList from '../components/ExperimentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [experiments, setExperiments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    searchTerm\n  } = useSearch();\n  useEffect(() => {\n    experimentAPI.getAll().then(data => {\n      setExperiments(data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to fetch experiments');\n      setLoading(false);\n    });\n  }, []);\n  const filteredExperiments = experiments.filter(exp => exp.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Experiments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExperimentList, {\n      experiments: filteredExperiments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"aEzziHbF/Ew7RoeMwONDge0cfes=\", false, function () {\n  return [useSearch];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Link","experimentAPI","useSearch","ExperimentList","jsxDEV","_jsxDEV","Dashboard","_s","experiments","setExperiments","loading","setLoading","error","setError","searchTerm","getAll","then","data","catch","err","filteredExperiments","filter","exp","title","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pthan/OneDrive/Desktop/SBproject/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { experimentAPI } from '../services/api';\r\nimport { useSearch } from '../context/SearchContext';\r\nimport ExperimentList from '../components/ExperimentList';\r\n\r\nconst Dashboard = () => {\r\n  const [experiments, setExperiments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { searchTerm } = useSearch();\r\n\r\n  useEffect(() => {\r\n    experimentAPI.getAll()\r\n      .then(data => {\r\n        setExperiments(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Failed to fetch experiments');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const filteredExperiments = experiments.filter(exp =>\r\n    exp.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Experiments</h2>\r\n      <ExperimentList experiments={filteredExperiments} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,QAAQ,0BAA0B;AACpD,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEe;EAAW,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAElCJ,SAAS,CAAC,MAAM;IACdG,aAAa,CAACc,MAAM,CAAC,CAAC,CACnBC,IAAI,CAACC,IAAI,IAAI;MACZR,cAAc,CAACQ,IAAI,CAAC;MACpBN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAI;MACZN,QAAQ,CAAC,6BAA6B,CAAC;MACvCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,mBAAmB,GAAGZ,WAAW,CAACa,MAAM,CAACC,GAAG,IAChDA,GAAG,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,IAAId,OAAO,EAAE,oBAAOL,OAAA;IAAAqB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIlB,KAAK,EAAE,oBAAOP,OAAA;IAAAqB,QAAA,EAAMd;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA,CAACF,cAAc;MAACK,WAAW,EAAEY;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/BID,SAAS;EAAA,QAIUJ,SAAS;AAAA;AAAA6B,EAAA,GAJ5BzB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}