{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pthan\\\\OneDrive\\\\Desktop\\\\SBproject\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      try {\n        const decodedUser = jwtDecode(storedToken);\n        setUser(decodedUser);\n        setToken(storedToken);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error(\"Invalid token:\", error);\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login({\n        username,\n        password\n      });\n      const {\n        token: authToken\n      } = response.data;\n      const decodedUser = jwtDecode(authToken);\n      setUser(decodedUser);\n      setToken(authToken);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', authToken);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error; // Re-throw to be handled by the component\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    token,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"JPFU8BLZ81A9TFjEGWcfOODxJaw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jwtDecode","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","storedToken","decodedUser","error","console","removeItem","login","username","password","response","authToken","data","setItem","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pthan/OneDrive/Desktop/SBproject/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      try {\r\n        const decodedUser = jwtDecode(storedToken);\r\n        setUser(decodedUser);\r\n        setToken(storedToken);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error(\"Invalid token:\", error);\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await authAPI.login({ username, password });\r\n      const { token: authToken } = response.data;\r\n      const decodedUser = jwtDecode(authToken);\r\n      \r\n      setUser(decodedUser);\r\n      setToken(authToken);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('token', authToken);\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw error; // Re-throw to be handled by the component\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    token,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}